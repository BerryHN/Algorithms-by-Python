# coding:utf-8

'''
《编程之美》
2.2不要被阶乘吓到
（1）给定一个整数N，那么N的阶乘N！末尾有多少个0？
    N！= K*10^M, K不能被10整除，N！末尾有M个0
    N！=（2^x）*（3^y）*（5*z） 任何一个大于1的数都能写成由三个质数2，3，5指数相乘的结果
    10 =（2*5）
    100 = （2*2）*（5*5）
    1000 = （2*2*2）*（5*5*5）
    。。。
    任何10的倍数都能写成2，5的有限幂次乘积，幂指数为10的倍数
    与质数相对应，可以发现 M=z
    ∴ N!=1*2*3*...*N-1*N=5^z
    ∴ 找出1~N之间所有数字约数为5的个数，z=个数和
（2）求N！的二进制表示最低位1的位置
    二进制乘法：
        1   1      1*1             1                  0个
        2   10     1*2             10                 1个=1=2^0
        3   11     1*2*3           110
        4   100    1*2*3*4         11000              3个=1+2=2^0+2^1
        5   101    1*2*3*4*5       1111000
        6   110    1*2*3*4*5*6     1011010000
        7   111    1*2*3*4*5*6*7   1001110110000
        8   1000   1*2*3*4*5*6*8   1001110110000000   7个=1+2+4=2^0+2^1+2^2
        ...
        N! = 1*2*3*4*...*N-1*N
        location1 = 倒数1+2^0+2^1+2^2+...2^n(2^n=N)
        Location1 = [N/2]+[N/4]+[N/8]+[N/16]+...
（3）给定一个整数n，判断是否是2的方幂,n>0
    n&(n-1)==0
'''


# Question1:
def Num0(n):
    count = 0
    for i in range(1, n + 1):
        j = i
        while j % 5 == 0:
            count += 1
            j /= 5
    return count


# Question2:
def Location1(n):
    if n <= 0:
        return 0
    count = 0  # N！末尾0的个数
    while n:
        count += n >> 1
        n >>= 1
    count += 1  # 最后一个1的位置，倒数count
    return count


# Question3:
def is2(n):
    if n <= 0:
        return False
    if n == 1:
        return True
    if n & (n - 1) == 0:
        return True
    return False


if __name__ == '__main__':
    n = -2
    print Num0(n)
    print Location1(n)
    print is2(n)

